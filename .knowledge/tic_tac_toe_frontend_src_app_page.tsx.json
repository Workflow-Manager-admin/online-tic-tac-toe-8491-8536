{"is_source_file": true, "format": "TypeScript React (TSX)", "description": "Source code for a Tic Tac Toe game frontend built with React, including game logic, state management, and UI components.", "external_files": ["react", "react-dom"], "external_methods": ["React.useState", "React.useEffect"], "published": ["TicTacToe", "Home"], "classes": [], "methods": [{"name": "getWinner", "description": "Determines if there's a winner on the current board state."}, {"name": "getAvailableMoves", "description": "Returns indices of empty cells where moves can be made."}, {"name": "isBoardFull", "description": "Checks if the board is completely filled, indicating a draw if no winner."}, {"name": "makeMove", "description": "Handles a player's move at a specific cell; updates game state and checks for win/draw."}, {"name": "aiMove", "description": "Performs a random move for the AI when enabled."}, {"name": "restartGame", "description": "Resets the game board and alternates the starting player."}, {"name": "resetAll", "description": "Resets the entire game to initial state, including scores."}], "calls": ["getWinner", "getAvailableMoves", "makeMove", "setTimeout", "setBoard", "setWinner", "setScore", "setCurrent", "setAIMode", "setStartingPlayer"], "search-terms": ["TicTacToe", "react", "useState", "useEffect", "ai", "game logic", "board state", "winner detection", "score management", "UI styling"], "state": 2, "file_id": 3, "knowledge_revision": 25, "git_revision": "6c3ceeaba47c91c7be255f1160ae87755e84fc71", "revision_history": [{"20": "6c3ceeaba47c91c7be255f1160ae87755e84fc71"}, {"22": "6c3ceeaba47c91c7be255f1160ae87755e84fc71"}, {"25": "6c3ceeaba47c91c7be255f1160ae87755e84fc71"}], "ctags": [], "hash": "d4e0e14052464ce2f111fb9d1cf911a5", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/src/app/page.tsx"}